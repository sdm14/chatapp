{"version":3,"sources":["redux/mainReducer.js","components/Join.js","components/ClientMessage.js","components/ServerMessage.js","components/Message.js","components/Input.js","components/General.js","components/Work.js","App.js","redux/store.js","index.js"],"names":["initialState","name","time","messages","typingText","mainReducer","state","action","type","hours","minutes","text","id","Date","now","message","filter","el","map","elCopy","setNameAction","getTimeAction","typingTextAction","sendMessageAction","deleteMessageAction","editMessageAction","Join","dispatch","useDispatch","useSelector","useState","section","setSection","className","placeholder","onChange","event","target","value","to","onClick","getHours","getMinutes","disabled","ClientMessage","props","edit","setEdit","editMessage","deleteMessage","onDoubleClick","onBlur","autoFocus","onKeyPress","key","ReactEmoji","emojify","ServerMessage","Message","Input","typingTextValue","sendMessage","length","General","Work","App","path","exact","component","store","createStore","require","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2a045a.chunk.js","sourcesContent":["const NAME = 'NAME'\r\nconst GET_TIME = 'GET_TIME'\r\nconst TYPING_TEXT = 'TYPING_TEXT'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\nconst DELETE_MESSAGE = 'DELETE_MESSAGE'\r\nconst EDIT_MESSAGE = 'EDIT_MESSAGE'\r\n\r\nconst initialState = {\r\n   name: '',\r\n   time: [],\r\n   messages: [],\r\n   typingText: ''\r\n}\r\n\r\nexport const mainReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case NAME:\r\n         return {\r\n            ...state,\r\n            name: action.name\r\n         }\r\n      case GET_TIME:\r\n         return {\r\n            ...state,\r\n            time: [action.hours, action.minutes]\r\n         }\r\n      case TYPING_TEXT:\r\n         return {\r\n            ...state,\r\n            typingText: action.text\r\n         }\r\n      case SEND_MESSAGE:\r\n         return {\r\n            ...state,\r\n            time: [action.hours, action.minutes],\r\n            messages: [...state.messages, { id: Date.now(), message: state.typingText }],\r\n            typingText: '',\r\n         }\r\n      case DELETE_MESSAGE:\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages.filter(el => el.id !== action.id)]\r\n         }\r\n      case EDIT_MESSAGE:\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages.map(el => {\r\n               if (el.id === action.id) {\r\n                  let elCopy = el\r\n                  elCopy.message = action.text\r\n                  return elCopy\r\n               }\r\n               return el\r\n            })]\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport const setNameAction = (name) => ({ type: NAME, name })\r\nexport const getTimeAction = (hours, minutes) => ({ type: GET_TIME, hours, minutes })\r\nexport const typingTextAction = (text) => ({ type: TYPING_TEXT, text })\r\nexport const sendMessageAction = (hours, minutes) => ({ type: SEND_MESSAGE, hours, minutes })\r\nexport const deleteMessageAction = (id) => ({ type: DELETE_MESSAGE, id })\r\nexport const editMessageAction = (id, text) => ({ type: EDIT_MESSAGE, id, text })","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setNameAction, getTimeAction } from '../redux/mainReducer'\r\n\r\nexport const Join = () => {\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const name = useSelector(state => state.name)\r\n\r\n   const setName = (event) => {\r\n      dispatch(setNameAction(event.target.value))\r\n   }\r\n   const getTime = () => {\r\n      let hours = (new Date()).getHours()\r\n      let minutes = (new Date()).getMinutes()\r\n      dispatch(getTimeAction(hours, minutes))\r\n   }\r\n\r\n   const [section, setSection] = useState('work')\r\n\r\n   return (\r\n      <div className=\"join__wrapper\">\r\n         <div className=\"join__inner\">\r\n            <h1 className=\"heading\">\r\n               Выберите раздел\r\n            </h1>\r\n            <input className=\"join__input\" placeholder=\"Введите имя\" onChange={setName} />\r\n            <div>\r\n               <select className=\"join__select\" onChange={(event) => setSection(event.target.value)}>\r\n                  <option value=\"work\">Рабочий раздел</option>\r\n                  <option value=\"general\">Общий раздел</option>\r\n               </select>\r\n            </div>\r\n            <Link to={`/${section}`}>\r\n               <button type=\"submit\" className=\"join__btn\" onClick={getTime} disabled={name ? false : true}>Войти</button>\r\n            </Link>\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteMessageAction, editMessageAction } from '../redux/mainReducer'\r\nimport ReactEmoji from 'react-emoji'\r\n\r\nexport const ClientMessage = (props) => {\r\n\r\n   const dispatch = useDispatch()\r\n   const [edit, setEdit] = useState(false)\r\n   const time = useSelector(state => state.time)\r\n\r\n\r\n   const deleteMessage = (id) => {\r\n      dispatch(deleteMessageAction(id))\r\n   }\r\n\r\n   const editMessage = (id, text) => {\r\n      if (!text) {\r\n         deleteMessage(id)\r\n      }\r\n      dispatch(editMessageAction(id, text))\r\n   }\r\n\r\n\r\n   return (\r\n      <div className=\"message__inner\" onDoubleClick={() => setEdit(!edit)}>\r\n         <div className=\"message\">\r\n            {edit\r\n               ? <input className=\"edit__message\"\r\n                  value={props.el.message}\r\n                  onChange={(event) => editMessage(props.el.id, event.target.value)}\r\n                  onBlur={() => setEdit(!edit)}\r\n                  autoFocus={true}\r\n                  onKeyPress={(event) => event.key === 'Enter' && setEdit(!edit)}\r\n               />\r\n               : <span className=\"message__span\">{ReactEmoji.emojify(props.el.message)}</span>\r\n            }\r\n         </div>\r\n         <span className=\"sent__time\">\r\n            {time[0] < 10 ? `0${time[0]}` : time[0]}:{time[1] < 10 ? `0${time[1]}` : time[1]}\r\n         </span>\r\n      </div >\r\n   )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const ServerMessage = () => {\r\n\r\n   const name = useSelector(state => state.name)\r\n   const time = useSelector(state => state.time)\r\n\r\n   return (\r\n      <div className=\"message__inner server\">\r\n         <div className=\"message\">\r\n            <span className=\"message__span server\">{name} вошел в чат</span>\r\n         </div>\r\n         <span className=\"sent__time server\">\r\n            {time[0] < 10 ? `0${time[0]}` : time[0]}:{time[1] < 10 ? `0${time[1]}` : time[1]}\r\n         </span>\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ClientMessage } from './ClientMessage'\r\nimport { ServerMessage } from './ServerMessage'\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\n\r\nexport const Message = () => {\r\n\r\n   const messages = useSelector(state => state.messages)\r\n\r\n   return (\r\n      <ScrollToBottom className=\"scroll\">\r\n         <ServerMessage />\r\n         {messages.map(el => <div key={el.id}><ClientMessage el={el} /></div>)}\r\n      </ScrollToBottom>\r\n   )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { typingTextAction, sendMessageAction } from '../redux/mainReducer'\r\n\r\nexport const Input = () => {\r\n\r\n   const dispatch = useDispatch()\r\n   const typingTextValue = useSelector(state => state.typingText)\r\n   const typingText = (event) => {\r\n      dispatch(typingTextAction(event.target.value))\r\n   }\r\n\r\n   const sendMessage = () => {\r\n      let hours = (new Date()).getHours()\r\n      let minutes = (new Date()).getMinutes()\r\n      if (typingTextValue.length > 0) {\r\n         dispatch(sendMessageAction(hours, minutes))\r\n      }\r\n   }\r\n\r\n   const enterSendMessage = (event) => {\r\n      if (event.key === 'Enter') {\r\n         sendMessage()\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"input__wrapper\">\r\n         <input className=\"chat__input\" onChange={typingText} value={typingTextValue} onKeyPress={enterSendMessage} />\r\n         <button className=\"chat__btn\" onClick={sendMessage}>Отправить</button>\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\nimport { Message } from './Message'\r\nimport { Input } from './Input'\r\n\r\nexport const General = (props) => {\r\n\r\n   return (\r\n      <div className=\"chat__wrapper\">\r\n         <div className=\"chat__inner\">\r\n            <Message />\r\n            <Input />\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\nimport { Message } from './Message'\r\nimport { Input } from './Input'\r\n\r\nexport const Work = () => {\r\n   return (\r\n      <div className=\"chat__wrapper\">\r\n         <div className=\"chat__inner\">\r\n            <Message />\r\n            <Input />\r\n         </div>\r\n      </div>\r\n   )\r\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Join } from './components/Join';\nimport { General } from './components/General';\nimport { Work } from './components/Work';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Route path=\"/chatapp\" exact component={Join} />\n      <Route path=\"/general\" component={General} />\n      <Route path=\"/work\" component={Work} />\n    </div>\n  );\n}\n\nexport default App;\n","const { createStore } = require(\"redux\");\r\nconst { mainReducer } = require(\"./mainReducer\");\r\n\r\nexport const store = createStore(mainReducer)\r\n\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css'\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}